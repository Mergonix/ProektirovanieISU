//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Property.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Users", Namespace="http://schemas.datacontract.org/2004/07/PropertyService")]
    [System.SerializableAttribute()]
    public partial class Users : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatronymicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Role_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adress {
            get {
                return this.AdressField;
            }
            set {
                if ((object.ReferenceEquals(this.AdressField, value) != true)) {
                    this.AdressField = value;
                    this.RaisePropertyChanged("Adress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateBirth {
            get {
                return this.DateBirthField;
            }
            set {
                if ((this.DateBirthField.Equals(value) != true)) {
                    this.DateBirthField = value;
                    this.RaisePropertyChanged("DateBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patronymic {
            get {
                return this.PatronymicField;
            }
            set {
                if ((object.ReferenceEquals(this.PatronymicField, value) != true)) {
                    this.PatronymicField = value;
                    this.RaisePropertyChanged("Patronymic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Role_ID {
            get {
                return this.Role_IDField;
            }
            set {
                if ((this.Role_IDField.Equals(value) != true)) {
                    this.Role_IDField = value;
                    this.RaisePropertyChanged("Role_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/PropertyService")]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Deal", Namespace="http://schemas.datacontract.org/2004/07/PropertyService")]
    [System.SerializableAttribute()]
    public partial class Deal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateDealField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Realty_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Services_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Users_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateDeal {
            get {
                return this.DateDealField;
            }
            set {
                if ((this.DateDealField.Equals(value) != true)) {
                    this.DateDealField = value;
                    this.RaisePropertyChanged("DateDeal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Realty_ID {
            get {
                return this.Realty_IDField;
            }
            set {
                if ((this.Realty_IDField.Equals(value) != true)) {
                    this.Realty_IDField = value;
                    this.RaisePropertyChanged("Realty_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Services_ID {
            get {
                return this.Services_IDField;
            }
            set {
                if ((this.Services_IDField.Equals(value) != true)) {
                    this.Services_IDField = value;
                    this.RaisePropertyChanged("Services_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Users_ID {
            get {
                return this.Users_IDField;
            }
            set {
                if ((this.Users_IDField.Equals(value) != true)) {
                    this.Users_IDField = value;
                    this.RaisePropertyChanged("Users_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HouseType", Namespace="http://schemas.datacontract.org/2004/07/PropertyService")]
    [System.SerializableAttribute()]
    public partial class HouseType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionHouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionHouse {
            get {
                return this.DescriptionHouseField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionHouseField, value) != true)) {
                    this.DescriptionHouseField = value;
                    this.RaisePropertyChanged("DescriptionHouse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Property_Type", Namespace="http://schemas.datacontract.org/2004/07/PropertyService")]
    [System.SerializableAttribute()]
    public partial class Property_Type : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionType {
            get {
                return this.DescriptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionTypeField, value) != true)) {
                    this.DescriptionTypeField = value;
                    this.RaisePropertyChanged("DescriptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Realty", Namespace="http://schemas.datacontract.org/2004/07/PropertyService")]
    [System.SerializableAttribute()]
    public partial class Realty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FlorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FlorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HouseType_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberHouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberRoomsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Object_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PropertyType_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Users_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apartment {
            get {
                return this.ApartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.ApartmentField, value) != true)) {
                    this.ApartmentField = value;
                    this.RaisePropertyChanged("Apartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descript {
            get {
                return this.DescriptField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptField, value) != true)) {
                    this.DescriptField = value;
                    this.RaisePropertyChanged("Descript");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Flor {
            get {
                return this.FlorField;
            }
            set {
                if ((this.FlorField.Equals(value) != true)) {
                    this.FlorField = value;
                    this.RaisePropertyChanged("Flor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Flors {
            get {
                return this.FlorsField;
            }
            set {
                if ((this.FlorsField.Equals(value) != true)) {
                    this.FlorsField = value;
                    this.RaisePropertyChanged("Flors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HouseType_ID {
            get {
                return this.HouseType_IDField;
            }
            set {
                if ((this.HouseType_IDField.Equals(value) != true)) {
                    this.HouseType_IDField = value;
                    this.RaisePropertyChanged("HouseType_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberHouse {
            get {
                return this.NumberHouseField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberHouseField, value) != true)) {
                    this.NumberHouseField = value;
                    this.RaisePropertyChanged("NumberHouse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberRooms {
            get {
                return this.NumberRoomsField;
            }
            set {
                if ((this.NumberRoomsField.Equals(value) != true)) {
                    this.NumberRoomsField = value;
                    this.RaisePropertyChanged("NumberRooms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Object_ID {
            get {
                return this.Object_IDField;
            }
            set {
                if ((this.Object_IDField.Equals(value) != true)) {
                    this.Object_IDField = value;
                    this.RaisePropertyChanged("Object_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PropertyType_ID {
            get {
                return this.PropertyType_IDField;
            }
            set {
                if ((this.PropertyType_IDField.Equals(value) != true)) {
                    this.PropertyType_IDField = value;
                    this.RaisePropertyChanged("PropertyType_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalArea {
            get {
                return this.TotalAreaField;
            }
            set {
                if ((this.TotalAreaField.Equals(value) != true)) {
                    this.TotalAreaField = value;
                    this.RaisePropertyChanged("TotalArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Users_ID {
            get {
                return this.Users_IDField;
            }
            set {
                if ((this.Users_IDField.Equals(value) != true)) {
                    this.Users_IDField = value;
                    this.RaisePropertyChanged("Users_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Authentication", Namespace="http://schemas.datacontract.org/2004/07/PropertyService")]
    [System.SerializableAttribute()]
    public partial class Authentication : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool errorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string error_messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_userField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int role_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool error {
            get {
                return this.errorField;
            }
            set {
                if ((this.errorField.Equals(value) != true)) {
                    this.errorField = value;
                    this.RaisePropertyChanged("error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string error_message {
            get {
                return this.error_messageField;
            }
            set {
                if ((object.ReferenceEquals(this.error_messageField, value) != true)) {
                    this.error_messageField = value;
                    this.RaisePropertyChanged("error_message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_user {
            get {
                return this.id_userField;
            }
            set {
                if ((this.id_userField.Equals(value) != true)) {
                    this.id_userField = value;
                    this.RaisePropertyChanged("id_user");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int role_id {
            get {
                return this.role_idField;
            }
            set {
                if ((this.role_idField.Equals(value) != true)) {
                    this.role_idField = value;
                    this.RaisePropertyChanged("role_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Object", Namespace="http://schemas.datacontract.org/2004/07/PropertyService")]
    [System.SerializableAttribute()]
    public partial class Object : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionObject {
            get {
                return this.DescriptionObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionObjectField, value) != true)) {
                    this.DescriptionObjectField = value;
                    this.RaisePropertyChanged("DescriptionObject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Services", Namespace="http://schemas.datacontract.org/2004/07/PropertyService")]
    [System.SerializableAttribute()]
    public partial class Services : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Report", Namespace="http://schemas.datacontract.org/2004/07/PropertyService")]
    [System.SerializableAttribute()]
    public partial class Report : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatronymicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patronymic {
            get {
                return this.PatronymicField;
            }
            set {
                if ((object.ReferenceEquals(this.PatronymicField, value) != true)) {
                    this.PatronymicField = value;
                    this.RaisePropertyChanged("Patronymic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Sum {
            get {
                return this.SumField;
            }
            set {
                if ((this.SumField.Equals(value) != true)) {
                    this.SumField = value;
                    this.RaisePropertyChanged("Sum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RealtyTable", Namespace="http://schemas.datacontract.org/2004/07/PropertyService")]
    [System.SerializableAttribute()]
    public partial class RealtyTable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FlorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FlorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HouseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberHouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberRoomsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Users_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apartment {
            get {
                return this.ApartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.ApartmentField, value) != true)) {
                    this.ApartmentField = value;
                    this.RaisePropertyChanged("Apartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descript {
            get {
                return this.DescriptField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptField, value) != true)) {
                    this.DescriptField = value;
                    this.RaisePropertyChanged("Descript");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Flor {
            get {
                return this.FlorField;
            }
            set {
                if ((this.FlorField.Equals(value) != true)) {
                    this.FlorField = value;
                    this.RaisePropertyChanged("Flor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Flors {
            get {
                return this.FlorsField;
            }
            set {
                if ((this.FlorsField.Equals(value) != true)) {
                    this.FlorsField = value;
                    this.RaisePropertyChanged("Flors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HouseType {
            get {
                return this.HouseTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.HouseTypeField, value) != true)) {
                    this.HouseTypeField = value;
                    this.RaisePropertyChanged("HouseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberHouse {
            get {
                return this.NumberHouseField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberHouseField, value) != true)) {
                    this.NumberHouseField = value;
                    this.RaisePropertyChanged("NumberHouse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberRooms {
            get {
                return this.NumberRoomsField;
            }
            set {
                if ((this.NumberRoomsField.Equals(value) != true)) {
                    this.NumberRoomsField = value;
                    this.RaisePropertyChanged("NumberRooms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Object {
            get {
                return this.ObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectField, value) != true)) {
                    this.ObjectField = value;
                    this.RaisePropertyChanged("Object");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyType {
            get {
                return this.PropertyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyTypeField, value) != true)) {
                    this.PropertyTypeField = value;
                    this.RaisePropertyChanged("PropertyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalArea {
            get {
                return this.TotalAreaField;
            }
            set {
                if ((this.TotalAreaField.Equals(value) != true)) {
                    this.TotalAreaField = value;
                    this.RaisePropertyChanged("TotalArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Users_ID {
            get {
                return this.Users_IDField;
            }
            set {
                if ((this.Users_IDField.Equals(value) != true)) {
                    this.Users_IDField = value;
                    this.RaisePropertyChanged("Users_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RealtorDeal", Namespace="http://schemas.datacontract.org/2004/07/PropertyService")]
    [System.SerializableAttribute()]
    public partial class RealtorDeal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateDealField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Property_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Users_IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateDeal {
            get {
                return this.DateDealField;
            }
            set {
                if ((this.DateDealField.Equals(value) != true)) {
                    this.DateDealField = value;
                    this.RaisePropertyChanged("DateDeal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Property_Type {
            get {
                return this.Property_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.Property_TypeField, value) != true)) {
                    this.Property_TypeField = value;
                    this.RaisePropertyChanged("Property_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Services {
            get {
                return this.ServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicesField, value) != true)) {
                    this.ServicesField = value;
                    this.RaisePropertyChanged("Services");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Users_ID {
            get {
                return this.Users_IDField;
            }
            set {
                if ((this.Users_IDField.Equals(value) != true)) {
                    this.Users_IDField = value;
                    this.RaisePropertyChanged("Users_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUsers", ReplyAction="http://tempuri.org/IService1/UpdateUsersResponse")]
        void UpdateUsers(Property.ServiceReference1.Users user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUsers", ReplyAction="http://tempuri.org/IService1/UpdateUsersResponse")]
        System.Threading.Tasks.Task UpdateUsersAsync(Property.ServiceReference1.Users user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddRole", ReplyAction="http://tempuri.org/IService1/AddRoleResponse")]
        void AddRole(Property.ServiceReference1.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddRole", ReplyAction="http://tempuri.org/IService1/AddRoleResponse")]
        System.Threading.Tasks.Task AddRoleAsync(Property.ServiceReference1.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectRole", ReplyAction="http://tempuri.org/IService1/SelectRoleResponse")]
        Property.ServiceReference1.Role[] SelectRole();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectRole", ReplyAction="http://tempuri.org/IService1/SelectRoleResponse")]
        System.Threading.Tasks.Task<Property.ServiceReference1.Role[]> SelectRoleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddDeal", ReplyAction="http://tempuri.org/IService1/AddDealResponse")]
        void AddDeal(Property.ServiceReference1.Deal deal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddDeal", ReplyAction="http://tempuri.org/IService1/AddDealResponse")]
        System.Threading.Tasks.Task AddDealAsync(Property.ServiceReference1.Deal deal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectDeal", ReplyAction="http://tempuri.org/IService1/SelectDealResponse")]
        Property.ServiceReference1.Deal[] SelectDeal();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectDeal", ReplyAction="http://tempuri.org/IService1/SelectDealResponse")]
        System.Threading.Tasks.Task<Property.ServiceReference1.Deal[]> SelectDealAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddHouseType", ReplyAction="http://tempuri.org/IService1/AddHouseTypeResponse")]
        void AddHouseType(Property.ServiceReference1.HouseType house_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddHouseType", ReplyAction="http://tempuri.org/IService1/AddHouseTypeResponse")]
        System.Threading.Tasks.Task AddHouseTypeAsync(Property.ServiceReference1.HouseType house_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectHouseType", ReplyAction="http://tempuri.org/IService1/SelectHouseTypeResponse")]
        Property.ServiceReference1.HouseType[] SelectHouseType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectHouseType", ReplyAction="http://tempuri.org/IService1/SelectHouseTypeResponse")]
        System.Threading.Tasks.Task<Property.ServiceReference1.HouseType[]> SelectHouseTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProperty_Type", ReplyAction="http://tempuri.org/IService1/AddProperty_TypeResponse")]
        void AddProperty_Type(Property.ServiceReference1.Property_Type property_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProperty_Type", ReplyAction="http://tempuri.org/IService1/AddProperty_TypeResponse")]
        System.Threading.Tasks.Task AddProperty_TypeAsync(Property.ServiceReference1.Property_Type property_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectProperty_Type", ReplyAction="http://tempuri.org/IService1/SelectProperty_TypeResponse")]
        Property.ServiceReference1.Property_Type[] SelectProperty_Type();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectProperty_Type", ReplyAction="http://tempuri.org/IService1/SelectProperty_TypeResponse")]
        System.Threading.Tasks.Task<Property.ServiceReference1.Property_Type[]> SelectProperty_TypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectRealty", ReplyAction="http://tempuri.org/IService1/SelectRealtyResponse")]
        Property.ServiceReference1.Realty[] SelectRealty();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectRealty", ReplyAction="http://tempuri.org/IService1/SelectRealtyResponse")]
        System.Threading.Tasks.Task<Property.ServiceReference1.Realty[]> SelectRealtyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByEmailUsers", ReplyAction="http://tempuri.org/IService1/FindByEmailUsersResponse")]
        bool FindByEmailUsers(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByEmailUsers", ReplyAction="http://tempuri.org/IService1/FindByEmailUsersResponse")]
        System.Threading.Tasks.Task<bool> FindByEmailUsersAsync(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectUsers", ReplyAction="http://tempuri.org/IService1/SelectUsersResponse")]
        Property.ServiceReference1.Users[] SelectUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectUsers", ReplyAction="http://tempuri.org/IService1/SelectUsersResponse")]
        System.Threading.Tasks.Task<Property.ServiceReference1.Users[]> SelectUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Authentication", ReplyAction="http://tempuri.org/IService1/AuthenticationResponse")]
        Property.ServiceReference1.Authentication Authentication(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Authentication", ReplyAction="http://tempuri.org/IService1/AuthenticationResponse")]
        System.Threading.Tasks.Task<Property.ServiceReference1.Authentication> AuthenticationAsync(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddUsers", ReplyAction="http://tempuri.org/IService1/AddUsersResponse")]
        void AddUsers(Property.ServiceReference1.Users user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddUsers", ReplyAction="http://tempuri.org/IService1/AddUsersResponse")]
        System.Threading.Tasks.Task AddUsersAsync(Property.ServiceReference1.Users user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDUsers", ReplyAction="http://tempuri.org/IService1/FindByIDUsersResponse")]
        Property.ServiceReference1.Users FindByIDUsers(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDUsers", ReplyAction="http://tempuri.org/IService1/FindByIDUsersResponse")]
        System.Threading.Tasks.Task<Property.ServiceReference1.Users> FindByIDUsersAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDProperty_Type", ReplyAction="http://tempuri.org/IService1/FindByIDProperty_TypeResponse")]
        Property.ServiceReference1.Property_Type FindByIDProperty_Type(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDProperty_Type", ReplyAction="http://tempuri.org/IService1/FindByIDProperty_TypeResponse")]
        System.Threading.Tasks.Task<Property.ServiceReference1.Property_Type> FindByIDProperty_TypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDObject", ReplyAction="http://tempuri.org/IService1/FindByIDObjectResponse")]
        Property.ServiceReference1.Object FindByIDObject(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDObject", ReplyAction="http://tempuri.org/IService1/FindByIDObjectResponse")]
        System.Threading.Tasks.Task<Property.ServiceReference1.Object> FindByIDObjectAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDHouseType", ReplyAction="http://tempuri.org/IService1/FindByIDHouseTypeResponse")]
        Property.ServiceReference1.HouseType FindByIDHouseType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDHouseType", ReplyAction="http://tempuri.org/IService1/FindByIDHouseTypeResponse")]
        System.Threading.Tasks.Task<Property.ServiceReference1.HouseType> FindByIDHouseTypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIdRealty", ReplyAction="http://tempuri.org/IService1/FindByIdRealtyResponse")]
        Property.ServiceReference1.Realty FindByIdRealty(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIdRealty", ReplyAction="http://tempuri.org/IService1/FindByIdRealtyResponse")]
        System.Threading.Tasks.Task<Property.ServiceReference1.Realty> FindByIdRealtyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDServices", ReplyAction="http://tempuri.org/IService1/FindByIDServicesResponse")]
        Property.ServiceReference1.Services FindByIDServices(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDServices", ReplyAction="http://tempuri.org/IService1/FindByIDServicesResponse")]
        System.Threading.Tasks.Task<Property.ServiceReference1.Services> FindByIDServicesAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDRole", ReplyAction="http://tempuri.org/IService1/FindByIDRoleResponse")]
        Property.ServiceReference1.Role FindByIDRole(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDRole", ReplyAction="http://tempuri.org/IService1/FindByIDRoleResponse")]
        System.Threading.Tasks.Task<Property.ServiceReference1.Role> FindByIDRoleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReportCount", ReplyAction="http://tempuri.org/IService1/ReportCountResponse")]
        Property.ServiceReference1.Report[] ReportCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReportCount", ReplyAction="http://tempuri.org/IService1/ReportCountResponse")]
        System.Threading.Tasks.Task<Property.ServiceReference1.Report[]> ReportCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReportPrice", ReplyAction="http://tempuri.org/IService1/ReportPriceResponse")]
        Property.ServiceReference1.Report[] ReportPrice();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReportPrice", ReplyAction="http://tempuri.org/IService1/ReportPriceResponse")]
        System.Threading.Tasks.Task<Property.ServiceReference1.Report[]> ReportPriceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectRealtyTable", ReplyAction="http://tempuri.org/IService1/SelectRealtyTableResponse")]
        Property.ServiceReference1.RealtyTable[] SelectRealtyTable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectRealtyTable", ReplyAction="http://tempuri.org/IService1/SelectRealtyTableResponse")]
        System.Threading.Tasks.Task<Property.ServiceReference1.RealtyTable[]> SelectRealtyTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectObject", ReplyAction="http://tempuri.org/IService1/SelectObjectResponse")]
        Property.ServiceReference1.Object[] SelectObject();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectObject", ReplyAction="http://tempuri.org/IService1/SelectObjectResponse")]
        System.Threading.Tasks.Task<Property.ServiceReference1.Object[]> SelectObjectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectServices", ReplyAction="http://tempuri.org/IService1/SelectServicesResponse")]
        Property.ServiceReference1.Services[] SelectServices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectServices", ReplyAction="http://tempuri.org/IService1/SelectServicesResponse")]
        System.Threading.Tasks.Task<Property.ServiceReference1.Services[]> SelectServicesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectRealtorDeal", ReplyAction="http://tempuri.org/IService1/SelectRealtorDealResponse")]
        Property.ServiceReference1.RealtorDeal[] SelectRealtorDeal(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectRealtorDeal", ReplyAction="http://tempuri.org/IService1/SelectRealtorDealResponse")]
        System.Threading.Tasks.Task<Property.ServiceReference1.RealtorDeal[]> SelectRealtorDealAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddRealty", ReplyAction="http://tempuri.org/IService1/AddRealtyResponse")]
        void AddRealty(Property.ServiceReference1.Realty realty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddRealty", ReplyAction="http://tempuri.org/IService1/AddRealtyResponse")]
        System.Threading.Tasks.Task AddRealtyAsync(Property.ServiceReference1.Realty realty);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Property.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Property.ServiceReference1.IService1>, Property.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void UpdateUsers(Property.ServiceReference1.Users user) {
            base.Channel.UpdateUsers(user);
        }
        
        public System.Threading.Tasks.Task UpdateUsersAsync(Property.ServiceReference1.Users user) {
            return base.Channel.UpdateUsersAsync(user);
        }
        
        public void AddRole(Property.ServiceReference1.Role role) {
            base.Channel.AddRole(role);
        }
        
        public System.Threading.Tasks.Task AddRoleAsync(Property.ServiceReference1.Role role) {
            return base.Channel.AddRoleAsync(role);
        }
        
        public Property.ServiceReference1.Role[] SelectRole() {
            return base.Channel.SelectRole();
        }
        
        public System.Threading.Tasks.Task<Property.ServiceReference1.Role[]> SelectRoleAsync() {
            return base.Channel.SelectRoleAsync();
        }
        
        public void AddDeal(Property.ServiceReference1.Deal deal) {
            base.Channel.AddDeal(deal);
        }
        
        public System.Threading.Tasks.Task AddDealAsync(Property.ServiceReference1.Deal deal) {
            return base.Channel.AddDealAsync(deal);
        }
        
        public Property.ServiceReference1.Deal[] SelectDeal() {
            return base.Channel.SelectDeal();
        }
        
        public System.Threading.Tasks.Task<Property.ServiceReference1.Deal[]> SelectDealAsync() {
            return base.Channel.SelectDealAsync();
        }
        
        public void AddHouseType(Property.ServiceReference1.HouseType house_type) {
            base.Channel.AddHouseType(house_type);
        }
        
        public System.Threading.Tasks.Task AddHouseTypeAsync(Property.ServiceReference1.HouseType house_type) {
            return base.Channel.AddHouseTypeAsync(house_type);
        }
        
        public Property.ServiceReference1.HouseType[] SelectHouseType() {
            return base.Channel.SelectHouseType();
        }
        
        public System.Threading.Tasks.Task<Property.ServiceReference1.HouseType[]> SelectHouseTypeAsync() {
            return base.Channel.SelectHouseTypeAsync();
        }
        
        public void AddProperty_Type(Property.ServiceReference1.Property_Type property_type) {
            base.Channel.AddProperty_Type(property_type);
        }
        
        public System.Threading.Tasks.Task AddProperty_TypeAsync(Property.ServiceReference1.Property_Type property_type) {
            return base.Channel.AddProperty_TypeAsync(property_type);
        }
        
        public Property.ServiceReference1.Property_Type[] SelectProperty_Type() {
            return base.Channel.SelectProperty_Type();
        }
        
        public System.Threading.Tasks.Task<Property.ServiceReference1.Property_Type[]> SelectProperty_TypeAsync() {
            return base.Channel.SelectProperty_TypeAsync();
        }
        
        public Property.ServiceReference1.Realty[] SelectRealty() {
            return base.Channel.SelectRealty();
        }
        
        public System.Threading.Tasks.Task<Property.ServiceReference1.Realty[]> SelectRealtyAsync() {
            return base.Channel.SelectRealtyAsync();
        }
        
        public bool FindByEmailUsers(string Email) {
            return base.Channel.FindByEmailUsers(Email);
        }
        
        public System.Threading.Tasks.Task<bool> FindByEmailUsersAsync(string Email) {
            return base.Channel.FindByEmailUsersAsync(Email);
        }
        
        public Property.ServiceReference1.Users[] SelectUsers() {
            return base.Channel.SelectUsers();
        }
        
        public System.Threading.Tasks.Task<Property.ServiceReference1.Users[]> SelectUsersAsync() {
            return base.Channel.SelectUsersAsync();
        }
        
        public Property.ServiceReference1.Authentication Authentication(string Email, string Password) {
            return base.Channel.Authentication(Email, Password);
        }
        
        public System.Threading.Tasks.Task<Property.ServiceReference1.Authentication> AuthenticationAsync(string Email, string Password) {
            return base.Channel.AuthenticationAsync(Email, Password);
        }
        
        public void AddUsers(Property.ServiceReference1.Users user) {
            base.Channel.AddUsers(user);
        }
        
        public System.Threading.Tasks.Task AddUsersAsync(Property.ServiceReference1.Users user) {
            return base.Channel.AddUsersAsync(user);
        }
        
        public Property.ServiceReference1.Users FindByIDUsers(int id) {
            return base.Channel.FindByIDUsers(id);
        }
        
        public System.Threading.Tasks.Task<Property.ServiceReference1.Users> FindByIDUsersAsync(int id) {
            return base.Channel.FindByIDUsersAsync(id);
        }
        
        public Property.ServiceReference1.Property_Type FindByIDProperty_Type(int id) {
            return base.Channel.FindByIDProperty_Type(id);
        }
        
        public System.Threading.Tasks.Task<Property.ServiceReference1.Property_Type> FindByIDProperty_TypeAsync(int id) {
            return base.Channel.FindByIDProperty_TypeAsync(id);
        }
        
        public Property.ServiceReference1.Object FindByIDObject(int id) {
            return base.Channel.FindByIDObject(id);
        }
        
        public System.Threading.Tasks.Task<Property.ServiceReference1.Object> FindByIDObjectAsync(int id) {
            return base.Channel.FindByIDObjectAsync(id);
        }
        
        public Property.ServiceReference1.HouseType FindByIDHouseType(int id) {
            return base.Channel.FindByIDHouseType(id);
        }
        
        public System.Threading.Tasks.Task<Property.ServiceReference1.HouseType> FindByIDHouseTypeAsync(int id) {
            return base.Channel.FindByIDHouseTypeAsync(id);
        }
        
        public Property.ServiceReference1.Realty FindByIdRealty(int id) {
            return base.Channel.FindByIdRealty(id);
        }
        
        public System.Threading.Tasks.Task<Property.ServiceReference1.Realty> FindByIdRealtyAsync(int id) {
            return base.Channel.FindByIdRealtyAsync(id);
        }
        
        public Property.ServiceReference1.Services FindByIDServices(int id) {
            return base.Channel.FindByIDServices(id);
        }
        
        public System.Threading.Tasks.Task<Property.ServiceReference1.Services> FindByIDServicesAsync(int id) {
            return base.Channel.FindByIDServicesAsync(id);
        }
        
        public Property.ServiceReference1.Role FindByIDRole(int id) {
            return base.Channel.FindByIDRole(id);
        }
        
        public System.Threading.Tasks.Task<Property.ServiceReference1.Role> FindByIDRoleAsync(int id) {
            return base.Channel.FindByIDRoleAsync(id);
        }
        
        public Property.ServiceReference1.Report[] ReportCount() {
            return base.Channel.ReportCount();
        }
        
        public System.Threading.Tasks.Task<Property.ServiceReference1.Report[]> ReportCountAsync() {
            return base.Channel.ReportCountAsync();
        }
        
        public Property.ServiceReference1.Report[] ReportPrice() {
            return base.Channel.ReportPrice();
        }
        
        public System.Threading.Tasks.Task<Property.ServiceReference1.Report[]> ReportPriceAsync() {
            return base.Channel.ReportPriceAsync();
        }
        
        public Property.ServiceReference1.RealtyTable[] SelectRealtyTable() {
            return base.Channel.SelectRealtyTable();
        }
        
        public System.Threading.Tasks.Task<Property.ServiceReference1.RealtyTable[]> SelectRealtyTableAsync() {
            return base.Channel.SelectRealtyTableAsync();
        }
        
        public Property.ServiceReference1.Object[] SelectObject() {
            return base.Channel.SelectObject();
        }
        
        public System.Threading.Tasks.Task<Property.ServiceReference1.Object[]> SelectObjectAsync() {
            return base.Channel.SelectObjectAsync();
        }
        
        public Property.ServiceReference1.Services[] SelectServices() {
            return base.Channel.SelectServices();
        }
        
        public System.Threading.Tasks.Task<Property.ServiceReference1.Services[]> SelectServicesAsync() {
            return base.Channel.SelectServicesAsync();
        }
        
        public Property.ServiceReference1.RealtorDeal[] SelectRealtorDeal(int id) {
            return base.Channel.SelectRealtorDeal(id);
        }
        
        public System.Threading.Tasks.Task<Property.ServiceReference1.RealtorDeal[]> SelectRealtorDealAsync(int id) {
            return base.Channel.SelectRealtorDealAsync(id);
        }
        
        public void AddRealty(Property.ServiceReference1.Realty realty) {
            base.Channel.AddRealty(realty);
        }
        
        public System.Threading.Tasks.Task AddRealtyAsync(Property.ServiceReference1.Realty realty) {
            return base.Channel.AddRealtyAsync(realty);
        }
    }
}
